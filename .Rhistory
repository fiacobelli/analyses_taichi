pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ (length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])))
}
print (pint.en)
for (s in pint.merged$sessionID) {
print (s)
}
pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
print (pint.en)
print (pint.rn)
pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
for (s in npint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
print (npint.en)
print (npint.rn)
pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
for (s in npint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
npint.en <- append(npint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
npint.rn <- append(npint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
print (pint.en)
print (pint.rn)
print (npint.en)
print (npint.rn)
pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
for (s in npint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
npint.en <- append(npint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
npint.rn <- append(npint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
print ("PINT EN")
print (pint.en)
print ("PINT RN")
print (pint.rn)
print ("NON-PINT EN")
print (npint.en)
print ("NON-PINT RN")
print (npint.rn)
pint.en <- c()
npint.en <- c()
pint.rn <- c()
npint.rn <- c()
for (s in pint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
pint.en <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
pint.rn <- append(pint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
for (s in npint.merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
npint.en <- append(npint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
npint.rn <- append(npint.rn,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
}
t.test(pint.en, npint.en)
t.test(pint.rn, npint.rn)
View(raw_merged)
for (s in  raw_merged$sessionID) {
en.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
}
rn.count
en.count
ep.count
rp.count
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
rn.count
en.count
rp.count
ep.count
}
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
print(rn.count)
print(en.count)
print(rp.count)
print(ep.count)
}
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
print ("rn")
print(rn.count)
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
}
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(pint.en,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
}
print ("rn")
print(rn.count)
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))/ totalDialogues)
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))/ totalDialogues)
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))/ totalDialogues)
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))/ totalDialogues)
}
print ("rn")
print(rn.count)
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
for (s in  raw_merged$sessionID) {
totalDialogues <- length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG",])
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print ("rn")
print(rn.count[0])
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print ("rn")
print(rn.count)
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
remove(en.count)
remove(ep.count)
remove(rn.count)
remove(rp.count)
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
for (s in  raw_merged$sessionID) {
en.count <- c()
ep.count <- c()
rp.count <- c()
rn.count <- c()
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print ("rn")
print(rn.count)
print ("en")
print(en.count)
print ("rp")
print(rp.count)
print ("ep")
print(ep.count)
for (s in  raw_merged$sessionID) {
en.count <- c()
ep.count <- c()
rp.count <- c()
rn.count <- c()
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print(rn.count)
print(en.count)
print(rp.count)
print(ep.count)
for (s in  raw_merged$sessionID) {
en.count <- c()
ep.count <- c()
rp.count <- c()
rn.count <- c()
en.count = append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print(rn.count)
print(en.count)
print(rp.count)
print(ep.count)
for (s in  raw_merged$sessionID) {
en.count <- c()
ep.count <- c()
rp.count <- c()
rn.count <- c()
en.count <- append(en.count,6)
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print(rn.count)
print(en.count)
print(rp.count)
print(ep.count)
ab <- c()
ab <- append(ab, 3)
ab
ab <- append(ab, 4)
ab
en.count <- c()
ep.count <- c()
rp.count <- c()
rn.count <- c()
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
print(rn.count)
print(en.count)
print(rp.count)
print(ep.count)
en.count <- vector()
ep.count <- c()
rp.count <- c()
rn.count <- c()
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID)))
rn.count <- append(rn.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID)))
ep.count <- append(ep.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID)))
rp.count <- append(rp.count,(length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID)))
}
cor.test(c(1,2,3), c(1,2,3))
cor.test(c(1,2,3), c(2,3,4))
cor.test(c(1,2,3), c(0,3,-9))
en.count <- vector()
ep.count <- c()
rp.count <- c()
rn.count <- c()
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))
rn.count <- append(rn.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))
ep.count <- append(ep.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))
rp.count <- append(rp.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))
}
cor.test(en.count, raw_merged$taichi_interest)
cor.test(ep.count, raw_merged$taichi_interest)
cor.test(rn.count, raw_merged$taichi_interest)
cor.test(rp.count, raw_merged$taichi_interest)
cor.test(en.count, raw_merged$taichi_learn)
cor.test(ep.count, raw_merged$taichi_learn)
cor.test(rn.count, raw_merged$taichi_learn)
cor.test(rp.count, raw_merged$taichi_learn)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
Dialogue <- read_csv("Dialogue.csv")
Dialogue$strategy <- substr(Dialogue$q_id,1,2)
dems <- read_csv("Demographics.csv")
post <- read_csv("PostQuestions.csv")
visited <- read_csv("visitedtaichi.csv")
# Exclude ppl that did not finish.
pre.good<-dems[dems$sessionID %in% post$sessionID,]
# Exclude test users
pre.good<-pre.good[pre.good$userType!="test",]
post<-post[post$sessionID %in% pre.good$sessionID,]
#Exclude those before Feb 23
pp<-Dialogue[Dialogue$sessionID %in% pre.good$sessionID,c("time","sessionID")]
pp.beforeFeb <- pp[c(67:2202),]
pre.good.sid<-unique(unlist(pre.good$sessionID, use.names = FALSE))
#View(pre.good)
interest.pre <- mean(dems$taichi_interest)
interest.post<- mean(post$taichi_learn)
barplot(c(interest.pre,interest.post))
d <- cbind(c("Pre","Post"),c(interest.pre,interest.post))
qplot(x=c("Pre","Post"),weight=c(interest.pre,interest.post),xlab="Survey")
t.test(pre.good$taichi_interest,post$taichi_learn,paired=TRUE)
barplot(table(Dialogue$strategy[Dialogue$sessionID=="ceprtq01ps0n5q92h8r74emid4" & Dialogue$speaker=="U"]))
qplot(data=post, x=guru_understanding, binwidth=1, xlab="1=Strongly Disagree, 5=Totally agree",main="HG Understood me")
visited.pre <- pre.good[pre.good$ID %in% visited$ID,]
visited.post <- post[post$sessionID %in% visited.pre$sessionID,]
visited.dialogues <- Dialogue[Dialogue$sessionID %in% visited.pre$sessionID,]
printed.post <- post[post$printed_flyer==1,]
printed.pre <- pre.good[pre.good$sessionID %in% printed.post$sessionID,]
printed.dialogues <- Dialogue[Dialogue$sessionID %in% printed.post$sessionID,]
length(printed.pre$sessionID)
length(printed.pre$sessionID)/length(pre.good$sessionID) * 100
en.count <- vector()
ep.count <- c()
rp.count <- c()
rn.count <- c()
for (s in  raw_merged$sessionID) {
en.count <- append(en.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EN",]$sessionID))
rn.count <- append(rn.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RN",]$sessionID))
ep.count <- append(ep.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "EP",]$sessionID))
rp.count <- append(rp.count,length(Dialogue[Dialogue$sessionID == s & Dialogue$speaker=="HG" & substr(Dialogue$q_id, 1, 2) == "RP",]$sessionID))
}
cor.test(ep.count, raw_merged$taichi_interest)
cor.test(rp.count, raw_merged$taichi_interest)
cor.test(en.count, raw_merged$taichi_interest)
cor.test(rn.count, raw_merged$taichi_interest)
cor.test(ep.count, raw_merged$taichi_learn)
cor.test(rp.count, raw_merged$taichi_learn)
cor.test(en.count, raw_merged$taichi_learn)
cor.test(rn.count, raw_merged$taichi_learn)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest",-0.2744292,0.1919599,-0.1324932, 0.2541909 )
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c2 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c2 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
view(df)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c2 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
View(df)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
View(df)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
datatable(df)
install.packages(datatable)
install.packages("datatable")
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df = data.frame(c1, c2, c3)
data(df)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df <- data.frame(c1, c2, c3)
data(df)
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df <- data.frame(c1, c2, c3)
knitr::kable(head(df))
c1 <- c("Strategy", "EP", "RP", "EN", "RN" )
c2 <- c("Tai Chi Interest (pre)",-0.2744292,0.1919599,-0.1324932,0.2541909 )
c3 <- c("Tai Chi Interest (post)",-0.4554372,0.1109431,-0.3339051,0.245545)
df <- data.frame(c1, c2, c3)
knitr::kable(df)
Strategy <- c("EP", "RP", "EN", "RN" )
Taichi.Interest.pre <- c(-0.2744292,0.1919599,-0.1324932,0.2541909 )
Taichi.Interest.post <- c(-0.4554372,0.1109431,-0.3339051,0.245545)
df <- data.frame(Strategy,Taichi.Interest.pre, Taichi.Interest.post)
knitr::kable(head(df))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
tail(names(sort(table(c(1,2,2,3,3,3,4,3)))), 1)
tail(names(sort(table(pre.good$age_range))), 1)
tail(names(sort(table(pre.good$age_range))), 1)
pre.interest <- pre.good$taichi_interest
post.interest <- - post$taichi_learn
t.test(pre.interest,post.interest,paired=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
Dialogue <- read_csv("Dialogue.csv")
Dialogue$strategy <- substr(Dialogue$q_id,1,2)
dems <- read_csv("Demographics.csv")
post <- read_csv("PostQuestions.csv")
visited <- read_csv("visitedtaichi.csv")
# Exclude ppl that did not finish.
pre.good<-dems[dems$sessionID %in% post$sessionID,]
# Exclude test users
pre.good<-pre.good[pre.good$userType!="test",]
post<-post[post$sessionID %in% pre.good$sessionID,]
#Exclude those before Feb 23
pp<-Dialogue[Dialogue$sessionID %in% pre.good$sessionID,c("time","sessionID")]
pp.beforeFeb <- pp[c(67:2202),]
pre.good.sid<-unique(unlist(pre.good$sessionID, use.names = FALSE))
#View(pre.good)
interest.pre <- mean(dems$taichi_interest)
interest.post<- mean(post$taichi_learn)
barplot(c(interest.pre,interest.post))
d <- cbind(c("Pre","Post"),c(interest.pre,interest.post))
qplot(x=c("Pre","Post"),weight=c(interest.pre,interest.post),xlab="Survey")
t.test(pre.good$taichi_interest,post$taichi_learn,paired=TRUE)
barplot(table(Dialogue$strategy[Dialogue$sessionID=="ceprtq01ps0n5q92h8r74emid4" & Dialogue$speaker=="U"]))
qplot(data=post, x=guru_understanding, binwidth=1, xlab="1=Strongly Disagree, 5=Totally agree",main="HG Understood me")
visited.pre <- pre.good[pre.good$ID %in% visited$ID,]
visited.post <- post[post$sessionID %in% visited.pre$sessionID,]
visited.dialogues <- Dialogue[Dialogue$sessionID %in% visited.pre$sessionID,]
printed.post <- post[post$printed_flyer==1,]
printed.pre <- pre.good[pre.good$sessionID %in% printed.post$sessionID,]
printed.dialogues <- Dialogue[Dialogue$sessionID %in% printed.post$sessionID,]
length(printed.pre$sessionID)
length(printed.pre$sessionID)/length(pre.good$sessionID) * 100
table(pre.good$position)
table(pre.good$gender)
table(pre.good$ethnicity)
table(pre.good$age_range)
table(pre.good$position)/length(pre.good$position)
table(pre.good$gender)/length(pre.good$gender)
table(pre.good$ethnicity)/length(pre.good$ethnicity)
table(pre.good$age_range)/length(pre.good$age_range)
length(pre.good[pre.good$age_range<5,]$sessionID)/length(pre.good$sessionID)*100
tail(names(sort(table(pre.good$age_range))), 1)
pre.desire <- pre.good$excercise_need
post.desire <- - post$post_excercise_need
t.test(pre.desire,post.desire,paired=TRUE)
pre.interest <- pre.good$taichi_interest
post.interest <- - post$taichi_learn
t.test(pre.interest,post.interest,paired=TRUE)
raw_merged = merge(x = pre.good, y = post, by = "sessionID", all = TRUE)
printed.decreased.interest <- length(raw_merged[raw_merged$taichi_learn < raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
printed.increased.interest <- length(raw_merged[raw_merged$taichi_learn > raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
printed.same.interest <- length(raw_merged[raw_merged$taichi_learn == raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
nprinted.decreased.interest <- length(raw_merged[raw_merged$taichi_learn < raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
nprinted.increased.interest <- length(raw_merged[raw_merged$taichi_learn > raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
nprinted.same.interest <- length(raw_merged[raw_merged$taichi_learn == raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
c1 <- c("", "Decreased", "Remained Same", "Increased", "Total")
c2 <- c ("No", nprinted.decreased.interest, nprinted.same.interest, nprinted.increased.interest, nprinted.decreased.interest + nprinted.same.interest + nprinted.increased.interest)
c3 <- c ("Yes", printed.decreased.interest, printed.same.interest, printed.increased.interest, printed.decreased.interest + printed.same.interest + printed.increased.interest)
c4 <- c ("Total", printed.decreased.interest + nprinted.decreased.interest, printed.same.interest + nprinted.same.interest, printed.increased.interest+nprinted.increased.interest, length(pre.good$sessionID))
print.interest <- data.frame(c1, c2, c3, c4)
View(print.interest)
raw_merged = merge(x = pre.good, y = post, by = "sessionID", all = TRUE)
printed.decreased.interest <- length(raw_merged[raw_merged$taichi_learn < raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
printed.increased.interest <- length(raw_merged[raw_merged$taichi_learn > raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
printed.same.interest <- length(raw_merged[raw_merged$taichi_learn == raw_merged$taichi_interest & raw_merged$printed_flyer == 1,]$sessionID)
nprinted.decreased.interest <- length(raw_merged[raw_merged$taichi_learn < raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
nprinted.increased.interest <- length(raw_merged[raw_merged$taichi_learn > raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
nprinted.same.interest <- length(raw_merged[raw_merged$taichi_learn == raw_merged$taichi_interest & raw_merged$printed_flyer == 0,]$sessionID)
c1 <- c("", "Decreased", "Remained Same", "Increased", "Total")
c2 <- c ("No", nprinted.decreased.interest, nprinted.same.interest, nprinted.increased.interest, nprinted.decreased.interest + nprinted.same.interest + nprinted.increased.interest)
c3 <- c ("Yes", printed.decreased.interest, printed.same.interest, printed.increased.interest, printed.decreased.interest + printed.same.interest + printed.increased.interest)
c4 <- c ("Total", printed.decreased.interest + nprinted.decreased.interest, printed.same.interest + nprinted.same.interest, printed.increased.interest+nprinted.increased.interest, length(pre.good$sessionID))
print.interest <- data.frame(c1, c2, c3, c4)
View(print.interest)
unlink('persuasion_cache', recursive = TRUE)
